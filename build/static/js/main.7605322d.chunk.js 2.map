{"version":3,"sources":["App.styles.js","components/ContactForm/ContactForm.styles.js","components/ContactForm/ContactForm.js","components/Filter/Filter.styles.js","components/Filter/Filter.js","components/ContactList/ContactList.styles.js","components/ContactListElement/ContactListElement.styles.js","components/ContactListElement/ContactListElement.js","components/ContactList/ContactList.js","App.js","hooks/useLocaleStorage.js","index.js"],"names":["Container","styled","div","Title","h1","TitleContacts","h2","Form","form","Input","input","Label","label","Button","button","ContactForm","onSubmit","useState","name","setName","number","setNumber","handleInputChange","e","currentTarget","value","Error","preventDefault","onChange","type","autoComplete","pattern","title","required","Filter","Ul","ul","Li","li","Span","span","ContactListElement","contactId","contactName","contactNumber","onDelete","onClick","ContactList","contactsArr","map","id","App","key","defaultValue","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","useLocalStorage","contacts","setContacts","filter","setFilter","contact","nanoid","normalizedName","toLowerCase","find","toast","style","color","icon","prevContacts","normalazedFilter","includes","getFilteredContact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7605322d.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n  margin-top: 20px;\n  margin-left: 20px;\n  padding: 20px;\n  width: 420px;\n  background: #f2f2f0;\n  border: 4px double #1b3c59;\n  border-radius: 36px;\n  box-shadow: 4px 3px 20px rgba(27, 60, 89, 0.2);\n`;\n\nexport const Title = styled.h1`\n  display: flex;\n  align-items: center;\n  margin-top: 0px;\n  margin-bottom: 25px;\n  font-size: 40px;\n  color: #456173;\n`;\nexport const TitleContacts = styled.h2`\n  display: flex;\n  align-items: center;\n  margin-top: 0px;\n  margin-bottom: 25px;\n  font-size: 30px;\n  color: #456173;\n`;\n","import styled from \"@emotion/styled\";\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 25px;\n  padding: 10px;\n  border: 2px dashed #456173;\n`;\nexport const Input = styled.input`\n  position: absolute;\n  top: 30px;\n  left: 0px;\n  min-width: 200px;\n  height: 20px;\n  padding: 4px 10px;\n  border: 2px solid #1b3c59;\n  border-radius: 2px;\n  transition: border 250ms ease-in-out;\n\n  &:hover,\n  &:focus {\n    border: 2px solid #11bfae;\n  }\n`;\nexport const Label = styled.label`\n  position: relative;\n  margin-bottom: 42px;\n  color: #1b3c59;\n  font-size: 20px;\n`;\nexport const Button = styled.button`\n  margin-top: 20px;\n  margin-bottom: 10px;\n  padding: 6px 8px;\n  width: 130px;\n\n  font-size: 18px;\n  font-weight: 700;\n  color: #f2f2f0;\n  background-color: #11bfae;\n  border-radius: 4px;\n  border: transparent;\n  cursor: pointer;\n  transition: all 250ms ease-in-out;\n\n  &:hover,\n  &:focus {\n    color: #11bfae;\n    background-color: #456173;\n  }\n`;\n","import { useState } from 'react'\nimport { Form, Label, Input, Button } from './ContactForm.styles'\nimport PropTypes from 'prop-types'\n\nfunction ContactForm({ onSubmit }) {\n  const [name, setName] = useState('')\n  const [number, setNumber] = useState('')\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.currentTarget\n\n    switch (name) {\n      case 'name':\n        return setName(value)\n\n      case 'number':\n        return setNumber(value)\n\n      default:\n        throw new Error(`there is no such name as ${name}`)\n    }\n  }\n\n  const resetFormInputs = () => {\n    setName('')\n    setNumber('')\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n\n    onSubmit({ name, number })\n    resetFormInputs()\n  }\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <Input\n          onChange={handleInputChange}\n          type=\"text\"\n          name=\"name\"\n          autoComplete=\"off\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          onChange={handleInputChange}\n          type=\"tel\"\n          name=\"number\"\n          autoComplete=\"off\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </Label>\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  )\n}\n\nexport default ContactForm\n\nContactForm.propTypes = { onSubmit: PropTypes.func.isRequired }\n","import styled from \"@emotion/styled\";\n\nexport const Input = styled.input`\n  position: absolute;\n  top: 30px;\n  left: 0px;\n  min-width: 200px;\n  height: 20px;\n  padding: 4px 10px;\n  border: 2px solid #1b3c59;\n  border-radius: 2px;\n  transition: border 250ms ease-in-out;\n\n  &:hover,\n  &:focus {\n    border: 2px solid #11bfae;\n  }\n`;\nexport const Label = styled.label`\n  position: relative;\n  margin-bottom: 50px;\n  color: #1b3c59;\n  font-size: 20px;\n`;\n","import { Label, Input } from './Filter.styles'\nimport PropTypes from 'prop-types'\n\nfunction Filter({ onChange }) {\n  return (\n    <Label>\n      Find contacts by name:\n      <Input onChange={onChange} type=\"text\" name=\"filter\"></Input>\n    </Label>\n  )\n}\n\nexport default Filter\n\nFilter.propTypes = {\n  onChange: PropTypes.func.isRequired,\n}\n","import styled from \"@emotion/styled\";\n\nexport const Ul = styled.ul`\n  margin: 0;\n  margin-top: 56px;\n  padding: 0;\n  list-style: none;\n`;\n","import styled from \"@emotion/styled\";\n\nexport const Li = styled.li`\n  display: flex;\n  align-items: center;\n\n  margin-bottom: 4px;\n  color: #1b3c59;\n  font-size: 18px;\n`;\nexport const Button = styled.button`\n  margin-left: auto;\n  padding: 8px 16px;\n\n  font-size: 14px;\n  font-weight: 700;\n  color: #f2f2f0;\n  background-color: #1b3c59;\n  border-radius: 4px;\n  border: transparent;\n  cursor: pointer;\n  transition: all 250ms ease-in-out;\n\n  &:hover,\n  &:focus {\n    background-color: #456173;\n  }\n`;\nexport const Span = styled.span`\n  margin-right: 20px;\n`;\n","import { Li, Button, Span } from './ContactListElement.styles'\nimport { IoIosContact } from 'react-icons/io'\nimport PropTypes from 'prop-types'\n\nfunction ContactListElement({\n  contactId,\n  contactName,\n  contactNumber,\n  onDelete,\n}) {\n  return (\n    <Li>\n      <Span>\n        <IoIosContact />\n      </Span>\n      {`${contactName}: ${contactNumber}`}\n      <Button\n        type=\"button\"\n        onClick={() => {\n          onDelete(contactId)\n        }}\n      >\n        Delete\n      </Button>\n    </Li>\n  )\n}\n\nexport default ContactListElement\n\nContactListElement.propTypes = {\n  contactId: PropTypes.string.isRequired,\n  contactName: PropTypes.string.isRequired,\n  contactNumber: PropTypes.string.isRequired,\n  onDelete: PropTypes.func.isRequired,\n}\n","import { Ul } from './ContactList.styles'\nimport ContactListElement from '../ContactListElement'\nimport PropTypes from 'prop-types'\n\nfunction ContactList({ contactsArr, onDelete }) {\n  return (\n    <Ul>\n      {contactsArr.map(({ id, name, number }) => {\n        return (\n          <ContactListElement\n            key={id}\n            contactId={id}\n            contactName={name}\n            contactNumber={number}\n            onDelete={onDelete}\n          />\n        )\n      })}\n    </Ul>\n  )\n}\n\nexport default ContactList\n\nContactList.propTypes = {\n  contactsArr: PropTypes.arrayOf(\n    PropTypes.objectOf(PropTypes.string.isRequired).isRequired,\n  ).isRequired,\n  onDelete: PropTypes.func.isRequired,\n}\n","import { useState } from 'react'\nimport { nanoid } from 'nanoid'\nimport { Container, Title, TitleContacts } from './App.styles'\nimport { TiContacts } from 'react-icons/ti'\nimport { IoIosContacts } from 'react-icons/io'\nimport { GiButterflyWarning } from 'react-icons/gi'\nimport toast, { Toaster } from 'react-hot-toast'\nimport ContactForm from './components/ContactForm'\nimport Filter from './components/Filter'\nimport ContactList from './components/ContactList'\nimport useLocalStorage from './hooks/useLocaleStorage'\n\nfunction App() {\n  const [contacts, setContacts] = useLocalStorage('contacts', [])\n  const [filter, setFilter] = useState('')\n\n  const handleFilterInputChange = (e) => {\n    const { name, value } = e.currentTarget\n\n    switch (name) {\n      case 'filter':\n        return setFilter(value)\n\n      default:\n        throw new Error(`there is no such name as ${name}`)\n    }\n  }\n\n  const addContact = ({ name, number }) => {\n    const contact = {\n      name,\n      number,\n      id: nanoid(),\n    }\n    const normalizedName = name.toLowerCase()\n    const contactExists = contacts.find(\n      (contact) => contact.name.toLowerCase() === normalizedName,\n    )\n\n    if (contactExists) {\n      return toast(`${contact.name} is already in contacts`, {\n        style: { color: '#456173' },\n        icon: <GiButterflyWarning />,\n      })\n    }\n\n    setContacts((prevContacts) => [contact, ...prevContacts])\n  }\n\n  const getFilteredContact = () => {\n    const normalazedFilter = filter.toLowerCase()\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalazedFilter),\n    )\n  }\n\n  const deleteContact = (id) => {\n    setContacts((prevContacts) =>\n      prevContacts.filter((contact) => contact.id !== id),\n    )\n  }\n\n  return (\n    <Container>\n      <Title>\n        <TiContacts /> Phonebook\n      </Title>\n      <ContactForm onSubmit={addContact} />\n      <TitleContacts>\n        <IoIosContacts />\n        Contacts\n      </TitleContacts>\n      <Filter onChange={handleFilterInputChange} />\n      <ContactList\n        contactsArr={getFilteredContact()}\n        onDelete={deleteContact}\n      />\n      <Toaster />\n    </Container>\n  )\n}\n\nexport default App\n","import { useState, useEffect } from 'react'\n\nexport default function useLocalStorage(key, defaultValue) {\n  const [state, setState] = useState(() => {\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue\n  })\n\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state))\n  }, [key, state])\n\n  return [state, setState]\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}